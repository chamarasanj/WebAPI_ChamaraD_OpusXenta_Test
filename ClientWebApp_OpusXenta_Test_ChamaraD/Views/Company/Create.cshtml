@model ClientWebApp_OpusXenta_Test_ChamaraD.Models.CompanyViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Register Company</h2>

<script type="text/javascript">
    $(document).ready(function ()
    {
        $("#btnSave").click(function ()
        {
          
            SaveItem();
        });
    });

    function ResetItem()
    {
        $("#CompanyID").val("0");
        $("#CompanyName").val("");
        $("#Email").val("");
        $("#LogoPath").val("");
        $("#CompanyLogo").val("");
        $("#Website").val("");

       
    }

    function SaveItem()
    {
       
       
        var formData = new FormData();

        formData.append("CompanyID", $("#CompanyID").val());
        formData.append("CompanyName", $("#CompanyName").val());
        formData.append("Email", $("#Email").val());
        formData.append("Website", $("#Website").val());
        formData.append("LogoPath", $("#LogoPath").get(0).files[0]);
        

        $.ajax({
            async: true,
            dataType: 'JSON',
            type: 'POST',
            contentType: false,
            processData: false,
            url: '/Company/Create/',
            data: formData,
            success: function (data)
            {
                alert(data.Message);
                ResetItem();
            },

            error: function () {

                alert("error");
                alert("There is some problem to add item");
            }
        });

    }

</script>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Company Register</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(model => model.CompanyID, htmlAttributes: new { @class = "control-label col-md-2" })
           
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogoPath, htmlAttributes: new { @class = "control-label col-md-2" })

        
            <div class="col-md-10">
             
                @Html.TextBoxFor(model => model.LogoPath, new { type = "file", @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
            
                <input type="button" value="Save" name="btnSave" class="btn btn-primary" id="btnSave" />
                &nbsp;
                <input type="button" value="Cancel" name="Cancel" class="btn btn-danger" id="btnCancel" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
